<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Openssl on rms1000watt</title>
    <link>https://rms1000watt.github.io/tags/openssl/</link>
    <description>Recent content in Openssl on rms1000watt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Feb 2017 07:11:58 -0800</lastBuildDate>
    
	<atom:link href="https://rms1000watt.github.io/tags/openssl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OpenSSL in Go</title>
      <link>https://rms1000watt.github.io/post/openssl-in-go/</link>
      <pubDate>Wed, 22 Feb 2017 07:11:58 -0800</pubDate>
      
      <guid>https://rms1000watt.github.io/post/openssl-in-go/</guid>
      <description>Food for thought: What if you wanted to use Go AND meet compliance requirements?
Golang devs have specifically mentioned that some compliance requirements are not planned to be incorporated into the code base as seen here.
So, an open question to the community: can anyone provide a working implementation of OpenSSL in Go for server/client that works out of the box? For instance, is there a project where I could&amp;hellip;</description>
    </item>
    
  </channel>
</rss>