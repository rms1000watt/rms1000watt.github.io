<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on rms1000watt</title>
    <link>https://rms1000watt.github.io/tags/github/</link>
    <description>Recent content in Github on rms1000watt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Aug 2018 07:32:00 -0700</lastBuildDate>
    
	<atom:link href="https://rms1000watt.github.io/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing Your Go App: Get Started the Easy Way</title>
      <link>https://rms1000watt.github.io/post/testing-your-go-app-get-started-the-easy-way/</link>
      <pubDate>Mon, 20 Aug 2018 07:32:00 -0700</pubDate>
      
      <guid>https://rms1000watt.github.io/post/testing-your-go-app-get-started-the-easy-way/</guid>
      <description>TLDR: VS Code can generate the foundation for your table driven tests and git precommit hooks can enforce successful tests before reaching Github
Gabriel Aszalos gave an excellent introductory blog post to testing in Golang; I recommend you read it: Your Introductory Course to Testing with Go. On top of this, I want to mention that your IDE can help you do some heavy lifting when writing tests, specifically, VS Code.</description>
    </item>
    
  </channel>
</rss>